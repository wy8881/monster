{
	"compiler": {
		"version": "0.8.9+commit.e5eed63a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "approved",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "approved",
						"type": "bool"
					}
				],
				"name": "ApprovalForAll",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"name": "Fighter1Win",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint8",
								"name": "HP",
								"type": "uint8"
							},
							{
								"internalType": "uint8",
								"name": "strength",
								"type": "uint8"
							},
							{
								"internalType": "uint8",
								"name": "defensive",
								"type": "uint8"
							},
							{
								"internalType": "uint8",
								"name": "speed",
								"type": "uint8"
							}
						],
						"indexed": false,
						"internalType": "struct MonsterLib.Statistics",
						"name": "",
						"type": "tuple"
					},
					{
						"components": [
							{
								"internalType": "uint8",
								"name": "HP",
								"type": "uint8"
							},
							{
								"internalType": "uint8",
								"name": "strength",
								"type": "uint8"
							},
							{
								"internalType": "uint8",
								"name": "defensive",
								"type": "uint8"
							},
							{
								"internalType": "uint8",
								"name": "speed",
								"type": "uint8"
							}
						],
						"indexed": false,
						"internalType": "struct MonsterLib.Statistics",
						"name": "",
						"type": "tuple"
					}
				],
				"name": "LevelUp",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"name": "LockMonster",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "MonsterInMarket",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "ReceiveEth",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "TransferMoney",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_tokenId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_defaultMonsterId",
						"type": "uint256"
					}
				],
				"name": "battleWithDefaultMonster",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_tokenId1",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_tokenId2",
						"type": "uint256"
					}
				],
				"name": "battleWithPlayer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_monsterId",
						"type": "uint256"
					}
				],
				"name": "deleteMonster",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "depositOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "getApproved",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_mumId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_dadId",
						"type": "uint256"
					}
				],
				"name": "getChild",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "enum MonsterLib.Race",
						"name": "race",
						"type": "uint8"
					}
				],
				"name": "getInitialMonster",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getOwnedMonster",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "tokenId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "mumId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "dadId",
								"type": "uint256"
							},
							{
								"components": [
									{
										"internalType": "uint8",
										"name": "HP",
										"type": "uint8"
									},
									{
										"internalType": "uint8",
										"name": "strength",
										"type": "uint8"
									},
									{
										"internalType": "uint8",
										"name": "defensive",
										"type": "uint8"
									},
									{
										"internalType": "uint8",
										"name": "speed",
										"type": "uint8"
									}
								],
								"internalType": "struct MonsterLib.Statistics",
								"name": "statc",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "uint8",
										"name": "HP",
										"type": "uint8"
									},
									{
										"internalType": "uint8",
										"name": "strength",
										"type": "uint8"
									},
									{
										"internalType": "uint8",
										"name": "defensive",
										"type": "uint8"
									},
									{
										"internalType": "uint8",
										"name": "speed",
										"type": "uint8"
									}
								],
								"internalType": "struct MonsterLib.IndividualValue",
								"name": "iv",
								"type": "tuple"
							},
							{
								"internalType": "uint8",
								"name": "level",
								"type": "uint8"
							},
							{
								"internalType": "uint8",
								"name": "expNeedToNext",
								"type": "uint8"
							},
							{
								"internalType": "enum MonsterLib.Race",
								"name": "race",
								"type": "uint8"
							},
							{
								"internalType": "bool",
								"name": "isLocked",
								"type": "bool"
							}
						],
						"internalType": "struct MonsterLib.Monster[]",
						"name": "monsters",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_tokenId",
						"type": "uint256"
					}
				],
				"name": "getProductInfo",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					},
					{
						"components": [
							{
								"internalType": "uint8",
								"name": "HP",
								"type": "uint8"
							},
							{
								"internalType": "uint8",
								"name": "strength",
								"type": "uint8"
							},
							{
								"internalType": "uint8",
								"name": "defensive",
								"type": "uint8"
							},
							{
								"internalType": "uint8",
								"name": "speed",
								"type": "uint8"
							}
						],
						"internalType": "struct MonsterLib.Statistics",
						"name": "",
						"type": "tuple"
					},
					{
						"internalType": "enum MonsterLib.Race",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_tokenId",
						"type": "uint256"
					}
				],
				"name": "getStatics",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint8",
								"name": "HP",
								"type": "uint8"
							},
							{
								"internalType": "uint8",
								"name": "strength",
								"type": "uint8"
							},
							{
								"internalType": "uint8",
								"name": "defensive",
								"type": "uint8"
							},
							{
								"internalType": "uint8",
								"name": "speed",
								"type": "uint8"
							}
						],
						"internalType": "struct MonsterLib.Statistics",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "operator",
						"type": "address"
					}
				],
				"name": "isApprovedForAll",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_tokenId",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "_locked",
						"type": "bool"
					}
				],
				"name": "lockMonster",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_tokenId",
						"type": "uint256"
					}
				],
				"name": "monsterById",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "tokenId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "mumId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "dadId",
								"type": "uint256"
							},
							{
								"components": [
									{
										"internalType": "uint8",
										"name": "HP",
										"type": "uint8"
									},
									{
										"internalType": "uint8",
										"name": "strength",
										"type": "uint8"
									},
									{
										"internalType": "uint8",
										"name": "defensive",
										"type": "uint8"
									},
									{
										"internalType": "uint8",
										"name": "speed",
										"type": "uint8"
									}
								],
								"internalType": "struct MonsterLib.Statistics",
								"name": "statc",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "uint8",
										"name": "HP",
										"type": "uint8"
									},
									{
										"internalType": "uint8",
										"name": "strength",
										"type": "uint8"
									},
									{
										"internalType": "uint8",
										"name": "defensive",
										"type": "uint8"
									},
									{
										"internalType": "uint8",
										"name": "speed",
										"type": "uint8"
									}
								],
								"internalType": "struct MonsterLib.IndividualValue",
								"name": "iv",
								"type": "tuple"
							},
							{
								"internalType": "uint8",
								"name": "level",
								"type": "uint8"
							},
							{
								"internalType": "uint8",
								"name": "expNeedToNext",
								"type": "uint8"
							},
							{
								"internalType": "enum MonsterLib.Race",
								"name": "race",
								"type": "uint8"
							},
							{
								"internalType": "bool",
								"name": "isLocked",
								"type": "bool"
							}
						],
						"internalType": "struct MonsterLib.Monster",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "ownerOf",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pickCompetitionRandomly",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "tokenId",
								"type": "uint256"
							},
							{
								"internalType": "uint8",
								"name": "level",
								"type": "uint8"
							},
							{
								"internalType": "enum MonsterLib.Race",
								"name": "race",
								"type": "uint8"
							},
							{
								"components": [
									{
										"internalType": "uint8",
										"name": "HP",
										"type": "uint8"
									},
									{
										"internalType": "uint8",
										"name": "strength",
										"type": "uint8"
									},
									{
										"internalType": "uint8",
										"name": "defensive",
										"type": "uint8"
									},
									{
										"internalType": "uint8",
										"name": "speed",
										"type": "uint8"
									}
								],
								"internalType": "struct MonsterLib.Statistics",
								"name": "statc",
								"type": "tuple"
							}
						],
						"internalType": "struct MonsterFactory.Competitor[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "safeTransferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "_data",
						"type": "bytes"
					}
				],
				"name": "safeTransferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "approved",
						"type": "bool"
					}
				],
				"name": "setApprovalForAll",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "tokenURI",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_tokenId",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_value",
						"type": "uint256"
					}
				],
				"name": "transferMoney",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"approve(address,uint256)": {
					"details": "See {IERC721-approve}."
				},
				"balanceOf(address)": {
					"details": "See {IERC721-balanceOf}."
				},
				"getApproved(uint256)": {
					"details": "See {IERC721-getApproved}."
				},
				"getInitialMonster(uint8)": {
					"details": "Pay ETH to get a default monster from contract"
				},
				"isApprovedForAll(address,address)": {
					"details": "See {IERC721-isApprovedForAll}."
				},
				"name()": {
					"details": "See {IERC721Metadata-name}."
				},
				"ownerOf(uint256)": {
					"details": "See {IERC721-ownerOf}."
				},
				"pickCompetitionRandomly()": {
					"details": "Pick five competitors randomly from existing monsters Cannot pick those monster whose owner is msg.sender"
				},
				"safeTransferFrom(address,address,uint256)": {
					"details": "See {IERC721-safeTransferFrom}."
				},
				"safeTransferFrom(address,address,uint256,bytes)": {
					"details": "See {IERC721-safeTransferFrom}."
				},
				"setApprovalForAll(address,bool)": {
					"details": "See {IERC721-setApprovalForAll}."
				},
				"supportsInterface(bytes4)": {
					"details": "See {IERC165-supportsInterface}."
				},
				"symbol()": {
					"details": "See {IERC721Metadata-symbol}."
				},
				"tokenURI(uint256)": {
					"details": "See {IERC721Metadata-tokenURI}."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"getStatics(uint256)": {
					"notice": "Used for buyer want to check more detailed information in the market"
				}
			},
			"notice": "This contract is used to store all the tokens and function related to breed and battle",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/MonsterFactory.sol": "MonsterFactory"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/MonsterFactory.sol": {
			"keccak256": "0x07fc0ad3e285166d6927c2bcf5a2040334c9362343d669048ab8edadf67e64ff",
			"urls": [
				"bzz-raw://2dc61f4740c43d9d5979db02b16e9978fc303def0fbfaf3f6e0f9c83f1a071fc",
				"dweb:/ipfs/QmYNFQrDzNhuPtBCqPeCfQSiSKkXiQwc6oegpa8dRSpYRh"
			]
		},
		"contracts/MonsterLib.sol": {
			"keccak256": "0x44e7993eeb015ff4584597f98994da246d7d600a7280b4123a817d23812128e9",
			"urls": [
				"bzz-raw://fe0c8c48d0803895140a427311e661049d07da3af1cc57ba449ca24cdc2960e4",
				"dweb:/ipfs/QmZrGvqLjrV26Dyd1kZCDQjKKaNNMxa6x5f3YJT4wQW6Zq"
			]
		},
		"contracts/MonsterToken.sol": {
			"keccak256": "0x7fb7de52dbb71995cb2852f87bf293fa5233131be8f698a4ae7cfc3a8e9b2c3e",
			"urls": [
				"bzz-raw://6c1db693783d45e55820a7b6c8a1ddf2ee31c5d8f4f17525cf941841215addb6",
				"dweb:/ipfs/QmcUTP4GZVTK2nS5RfaFhMBj488Y88KzM82y7YvDraB8J5"
			]
		},
		"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
			"keccak256": "0x921f012325281f7d81e29c53a13824cf6c2c5d77232065d0d4f3f912e97af6ea",
			"license": "MIT",
			"urls": [
				"bzz-raw://7dbcedc364fce0ab5e54d21d4cbd91a97959f52c0674cf5c36a314bb58308f62",
				"dweb:/ipfs/QmfYpqHKtu3bSQ9FGvLwzdxRNykStpVPtoLNTaM1KBKj6E"
			]
		},
		"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
			"keccak256": "0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba",
			"license": "MIT",
			"urls": [
				"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0",
				"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph"
			]
		},
		"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
			"keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
			"license": "MIT",
			"urls": [
				"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
				"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
			]
		},
		"node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
			"keccak256": "0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5",
			"license": "MIT",
			"urls": [
				"bzz-raw://afbedcf17f31db719e6fdc56caa8f458799c5fa2eb94cb1e94ef18f89af85768",
				"dweb:/ipfs/QmVmqRdBfbgYThpZSoAJ5o9mnAMjx8mCHHjv3Rh8cQAAg3"
			]
		},
		"node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
			"keccak256": "0x1cbe42915bc66227970fe99bc0f783eb1de30f2b48f984af01ad45edb9658698",
			"license": "MIT",
			"urls": [
				"bzz-raw://2baa08eb67d9da46e6c4c049f17b7684a1c68c5268d0f466cfa0eb23ce2bf9b0",
				"dweb:/ipfs/Qmdnj8zj4PfErB2HM2eKmDt7FrqrhggsZ6Qd8MpD593tgj"
			]
		},
		"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
			"keccak256": "0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf",
			"license": "MIT",
			"urls": [
				"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34",
				"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR"
			]
		},
		"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
			"keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
			"license": "MIT",
			"urls": [
				"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
				"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
			]
		},
		"node_modules/@openzeppelin/contracts/utils/Address.sol": {
			"keccak256": "0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87",
			"license": "MIT",
			"urls": [
				"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58",
				"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV"
			]
		},
		"node_modules/@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"node_modules/@openzeppelin/contracts/utils/Strings.sol": {
			"keccak256": "0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45",
			"license": "MIT",
			"urls": [
				"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30",
				"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2"
			]
		},
		"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
			"keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
			"license": "MIT",
			"urls": [
				"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
				"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
			]
		},
		"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
			"license": "MIT",
			"urls": [
				"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
				"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
			]
		}
	},
	"version": 1
}